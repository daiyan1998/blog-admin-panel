/* prettier-ignore-start */

/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file is auto-generated by TanStack Router

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as IndexImport } from './routes/index'
import { Route as DashboardMailImport } from './routes/_dashboard/_mail'
import { Route as authRegisterImport } from './routes/(auth)/register'
import { Route as authLoginImport } from './routes/(auth)/login'
import { Route as DashboardUsersIndexImport } from './routes/_dashboard/users/index'
import { Route as DashboardTagsIndexImport } from './routes/_dashboard/tags/index'
import { Route as DashboardMembersIndexImport } from './routes/_dashboard/members/index'
import { Route as DashboardCategoriesIndexImport } from './routes/_dashboard/categories/index'
import { Route as DashboardBlogsIndexImport } from './routes/_dashboard/blogs/index'
import { Route as DashboardUsersCreateImport } from './routes/_dashboard/users/create'
import { Route as DashboardBlogsCreateImport } from './routes/_dashboard/blogs/create'
import { Route as DashboardBlogsIdImport } from './routes/_dashboard/blogs/$id'
import { Route as DashboardMailMailsIndexImport } from './routes/_dashboard/_mail/mails/index'
import { Route as DashboardBlogsEditIdImport } from './routes/_dashboard/blogs/edit.$id'

// Create/Update Routes

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const DashboardMailRoute = DashboardMailImport.update({
  id: '/_mail',
  getParentRoute: () => DashboardRoute,
} as any)

const authRegisterRoute = authRegisterImport.update({
  path: '/register',
  getParentRoute: () => rootRoute,
} as any)

const authLoginRoute = authLoginImport.update({
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const DashboardUsersIndexRoute = DashboardUsersIndexImport.update({
  path: '/users/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardTagsIndexRoute = DashboardTagsIndexImport.update({
  path: '/tags/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMembersIndexRoute = DashboardMembersIndexImport.update({
  path: '/members/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardCategoriesIndexRoute = DashboardCategoriesIndexImport.update({
  path: '/categories/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBlogsIndexRoute = DashboardBlogsIndexImport.update({
  path: '/blogs/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardUsersCreateRoute = DashboardUsersCreateImport.update({
  path: '/users/create',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBlogsCreateRoute = DashboardBlogsCreateImport.update({
  path: '/blogs/create',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardBlogsIdRoute = DashboardBlogsIdImport.update({
  path: '/blogs/$id',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardMailMailsIndexRoute = DashboardMailMailsIndexImport.update({
  path: '/mails/',
  getParentRoute: () => DashboardMailRoute,
} as any)

const DashboardBlogsEditIdRoute = DashboardBlogsEditIdImport.update({
  path: '/blogs/edit/$id',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof authLoginImport
      parentRoute: typeof rootRoute
    }
    '/(auth)/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof authRegisterImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/_mail': {
      id: '/_dashboard/_mail'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardMailImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/blogs/$id': {
      id: '/_dashboard/blogs/$id'
      path: '/blogs/$id'
      fullPath: '/blogs/$id'
      preLoaderRoute: typeof DashboardBlogsIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/blogs/create': {
      id: '/_dashboard/blogs/create'
      path: '/blogs/create'
      fullPath: '/blogs/create'
      preLoaderRoute: typeof DashboardBlogsCreateImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/users/create': {
      id: '/_dashboard/users/create'
      path: '/users/create'
      fullPath: '/users/create'
      preLoaderRoute: typeof DashboardUsersCreateImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/blogs/': {
      id: '/_dashboard/blogs/'
      path: '/blogs'
      fullPath: '/blogs'
      preLoaderRoute: typeof DashboardBlogsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/categories/': {
      id: '/_dashboard/categories/'
      path: '/categories'
      fullPath: '/categories'
      preLoaderRoute: typeof DashboardCategoriesIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/members/': {
      id: '/_dashboard/members/'
      path: '/members'
      fullPath: '/members'
      preLoaderRoute: typeof DashboardMembersIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/tags/': {
      id: '/_dashboard/tags/'
      path: '/tags'
      fullPath: '/tags'
      preLoaderRoute: typeof DashboardTagsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/users/': {
      id: '/_dashboard/users/'
      path: '/users'
      fullPath: '/users'
      preLoaderRoute: typeof DashboardUsersIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/blogs/edit/$id': {
      id: '/_dashboard/blogs/edit/$id'
      path: '/blogs/edit/$id'
      fullPath: '/blogs/edit/$id'
      preLoaderRoute: typeof DashboardBlogsEditIdImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/_mail/mails/': {
      id: '/_dashboard/_mail/mails/'
      path: '/mails'
      fullPath: '/mails'
      preLoaderRoute: typeof DashboardMailMailsIndexImport
      parentRoute: typeof DashboardMailImport
    }
  }
}

// Create and export the route tree

interface DashboardMailRouteChildren {
  DashboardMailMailsIndexRoute: typeof DashboardMailMailsIndexRoute
}

const DashboardMailRouteChildren: DashboardMailRouteChildren = {
  DashboardMailMailsIndexRoute: DashboardMailMailsIndexRoute,
}

const DashboardMailRouteWithChildren = DashboardMailRoute._addFileChildren(
  DashboardMailRouteChildren,
)

interface DashboardRouteChildren {
  DashboardMailRoute: typeof DashboardMailRouteWithChildren
  DashboardBlogsIdRoute: typeof DashboardBlogsIdRoute
  DashboardBlogsCreateRoute: typeof DashboardBlogsCreateRoute
  DashboardUsersCreateRoute: typeof DashboardUsersCreateRoute
  DashboardBlogsIndexRoute: typeof DashboardBlogsIndexRoute
  DashboardCategoriesIndexRoute: typeof DashboardCategoriesIndexRoute
  DashboardMembersIndexRoute: typeof DashboardMembersIndexRoute
  DashboardTagsIndexRoute: typeof DashboardTagsIndexRoute
  DashboardUsersIndexRoute: typeof DashboardUsersIndexRoute
  DashboardBlogsEditIdRoute: typeof DashboardBlogsEditIdRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardMailRoute: DashboardMailRouteWithChildren,
  DashboardBlogsIdRoute: DashboardBlogsIdRoute,
  DashboardBlogsCreateRoute: DashboardBlogsCreateRoute,
  DashboardUsersCreateRoute: DashboardUsersCreateRoute,
  DashboardBlogsIndexRoute: DashboardBlogsIndexRoute,
  DashboardCategoriesIndexRoute: DashboardCategoriesIndexRoute,
  DashboardMembersIndexRoute: DashboardMembersIndexRoute,
  DashboardTagsIndexRoute: DashboardTagsIndexRoute,
  DashboardUsersIndexRoute: DashboardUsersIndexRoute,
  DashboardBlogsEditIdRoute: DashboardBlogsEditIdRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '': typeof DashboardMailRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/blogs/$id': typeof DashboardBlogsIdRoute
  '/blogs/create': typeof DashboardBlogsCreateRoute
  '/users/create': typeof DashboardUsersCreateRoute
  '/blogs': typeof DashboardBlogsIndexRoute
  '/categories': typeof DashboardCategoriesIndexRoute
  '/members': typeof DashboardMembersIndexRoute
  '/tags': typeof DashboardTagsIndexRoute
  '/users': typeof DashboardUsersIndexRoute
  '/blogs/edit/$id': typeof DashboardBlogsEditIdRoute
  '/mails': typeof DashboardMailMailsIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '': typeof DashboardMailRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/blogs/$id': typeof DashboardBlogsIdRoute
  '/blogs/create': typeof DashboardBlogsCreateRoute
  '/users/create': typeof DashboardUsersCreateRoute
  '/blogs': typeof DashboardBlogsIndexRoute
  '/categories': typeof DashboardCategoriesIndexRoute
  '/members': typeof DashboardMembersIndexRoute
  '/tags': typeof DashboardTagsIndexRoute
  '/users': typeof DashboardUsersIndexRoute
  '/blogs/edit/$id': typeof DashboardBlogsEditIdRoute
  '/mails': typeof DashboardMailMailsIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/login': typeof authLoginRoute
  '/register': typeof authRegisterRoute
  '/_dashboard/_mail': typeof DashboardMailRouteWithChildren
  '/_dashboard/blogs/$id': typeof DashboardBlogsIdRoute
  '/_dashboard/blogs/create': typeof DashboardBlogsCreateRoute
  '/_dashboard/users/create': typeof DashboardUsersCreateRoute
  '/_dashboard/blogs/': typeof DashboardBlogsIndexRoute
  '/_dashboard/categories/': typeof DashboardCategoriesIndexRoute
  '/_dashboard/members/': typeof DashboardMembersIndexRoute
  '/_dashboard/tags/': typeof DashboardTagsIndexRoute
  '/_dashboard/users/': typeof DashboardUsersIndexRoute
  '/_dashboard/blogs/edit/$id': typeof DashboardBlogsEditIdRoute
  '/_dashboard/_mail/mails/': typeof DashboardMailMailsIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/blogs/$id'
    | '/blogs/create'
    | '/users/create'
    | '/blogs'
    | '/categories'
    | '/members'
    | '/tags'
    | '/users'
    | '/blogs/edit/$id'
    | '/mails'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | ''
    | '/login'
    | '/register'
    | '/blogs/$id'
    | '/blogs/create'
    | '/users/create'
    | '/blogs'
    | '/categories'
    | '/members'
    | '/tags'
    | '/users'
    | '/blogs/edit/$id'
    | '/mails'
  id:
    | '__root__'
    | '/'
    | '/_dashboard'
    | '/login'
    | '/register'
    | '/_dashboard/_mail'
    | '/_dashboard/blogs/$id'
    | '/_dashboard/blogs/create'
    | '/_dashboard/users/create'
    | '/_dashboard/blogs/'
    | '/_dashboard/categories/'
    | '/_dashboard/members/'
    | '/_dashboard/tags/'
    | '/_dashboard/users/'
    | '/_dashboard/blogs/edit/$id'
    | '/_dashboard/_mail/mails/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DashboardRoute: typeof DashboardRouteWithChildren
  authLoginRoute: typeof authLoginRoute
  authRegisterRoute: typeof authRegisterRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DashboardRoute: DashboardRouteWithChildren,
  authLoginRoute: authLoginRoute,
  authRegisterRoute: authRegisterRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* prettier-ignore-end */

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.jsx",
      "children": [
        "/",
        "/_dashboard",
        "/login",
        "/register"
      ]
    },
    "/": {
      "filePath": "index.jsx"
    },
    "/_dashboard": {
      "filePath": "_dashboard.jsx",
      "children": [
        "/_dashboard/_mail",
        "/_dashboard/blogs/$id",
        "/_dashboard/blogs/create",
        "/_dashboard/users/create",
        "/_dashboard/blogs/",
        "/_dashboard/categories/",
        "/_dashboard/members/",
        "/_dashboard/tags/",
        "/_dashboard/users/",
        "/_dashboard/blogs/edit/$id"
      ]
    },
    "/login": {
      "filePath": "(auth)/login.jsx"
    },
    "/register": {
      "filePath": "(auth)/register.jsx"
    },
    "/_dashboard/_mail": {
      "filePath": "_dashboard/_mail.jsx",
      "parent": "/_dashboard",
      "children": [
        "/_dashboard/_mail/mails/"
      ]
    },
    "/_dashboard/blogs/$id": {
      "filePath": "_dashboard/blogs/$id.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/blogs/create": {
      "filePath": "_dashboard/blogs/create.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/users/create": {
      "filePath": "_dashboard/users/create.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/blogs/": {
      "filePath": "_dashboard/blogs/index.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/categories/": {
      "filePath": "_dashboard/categories/index.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/members/": {
      "filePath": "_dashboard/members/index.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/tags/": {
      "filePath": "_dashboard/tags/index.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/users/": {
      "filePath": "_dashboard/users/index.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/blogs/edit/$id": {
      "filePath": "_dashboard/blogs/edit.$id.jsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/_mail/mails/": {
      "filePath": "_dashboard/_mail/mails/index.jsx",
      "parent": "/_dashboard/_mail"
    }
  }
}
ROUTE_MANIFEST_END */
