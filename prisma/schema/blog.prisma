model Blog {
  id         String       @id @default(uuid())
  userId     String?
  title      String
  content    String
  published  Boolean      @default(false)
  author     String?
  coverImage String?
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
  categoryId String?
  category   Category?    @relation(fields: [categoryId], references: [id])
  user       User?        @relation(fields: [userId], references: [id])
  tags       BlogOnTags[]
  comments   Comment[]
}

model Category {
  id        String   @id @default(uuid())
  name      String   @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  blogs     Blog[]
}

model Tag {
  id        String       @id @default(uuid())
  name      String       @unique
  createdAt DateTime     @default(now())
  updatedAt DateTime     @updatedAt
  blogs     BlogOnTags[]
}

model BlogOnTags {
  blogId String
  tagId  String
  blog   Blog   @relation(fields: [blogId], references: [id], onDelete: Cascade)
  tag    Tag    @relation(fields: [tagId], references: [id])

  @@id([blogId, tagId])
}
